<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Webshop</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/products">Products</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/cart">Cart</a>
                </li>
            </ul>

            <ul class="navbar-nav">
                @if (isLoggedIn)
                {
                    <li class="nav-item">
                        <a class="nav-link" @onclick="Logout">Logout</a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link" href="/login">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/register">Register</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

@code {
    [Inject] private AuthService AuthService { get; set; }

    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        isLoggedIn = await AuthService.IsLoggedIn();
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        isLoggedIn = false;
    }
}
