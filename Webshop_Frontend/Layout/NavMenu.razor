@inject AuthService AuthService
@inject CartService CartService

<nav class="navbar navbar-expand-lg navbar-dark bg-primary fixed-top shadow">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">Webshop</a>

        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <!-- LEFT SIDE: Only "Proizvodi" -->
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/products">Proizvodi</a>
                </li>
            </ul>

            <!-- RIGHT SIDE: Auth links and Cart Icon -->
            <ul class="navbar-nav ms-auto">
                <!-- Shopping Cart Icon -->
                <li class="nav-item me-3 position-relative">
                    <a class="nav-link" href="/cart">
                        <i class="bi bi-cart-fill cart-icon" style="font-size: 1.5rem; position: relative;"></i>
                        @if (CartItemCount > 0)
                        {
                            <span class="position-absolute badge rounded-pill bg-danger"
                                  style="font-size: 0.8rem; top: 10px; right: -5px; transform: translate(50%, -50%);">
                                @CartItemCount
                            </span>
                        }
                    </a>
                </li>

                <!-- User Dropdown -->
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="userMenu" role="button"
                       data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-person-circle user-icon" style="font-size: 1.5rem;"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenu">
                        @if (isLoggedIn)
                        {
                            <li>
                                <button class="dropdown-item dropdown-link-custom" @onclick="Logout">Odjava</button>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a class="dropdown-item dropdown-link-custom" href="/login">Prijava</a>
                            </li>
                            <li>
                                <a class="dropdown-item dropdown-link-custom" href="/register">Registracija</a>
                            </li>
                        }
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>

@code {
    private bool isLoggedIn;
    private int CartItemCount; // Broj artikala u košarici

    protected override async Task OnInitializedAsync()
    {
        // Pretplata na događaj iz CartService za praćenje promjena
        CartService.OnChange += UpdateCartItemCount;

        // Inicijalno učitaj broj artikala u košarici
        UpdateCartItemCount();

        isLoggedIn = await AuthService.IsLoggedIn();
        AuthService.OnAuthStateChanged += OnAuthStateChanged;
    }

    private void UpdateCartItemCount()
    {
        // Ažuriraj broj artikala na temelju servisa
        CartItemCount = CartService.GetTotalItems();
        StateHasChanged();
    }

    private async void OnAuthStateChanged()
    {
        isLoggedIn = await AuthService.IsLoggedIn();
        StateHasChanged();
    }

    private async Task Logout()
    {
        await AuthService.Logout();
        CartItemCount = 0; // Resetiraj broj artikala
        StateHasChanged();
    }

    public void Dispose()
    {
        // Ukloni pretplate na događaje kako bi se spriječili memory leakovi
        CartService.OnChange -= UpdateCartItemCount;
        AuthService.OnAuthStateChanged -= OnAuthStateChanged;
    }
}