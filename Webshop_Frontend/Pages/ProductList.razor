@page "/products"
@using Webshop_Frontend.Services
@using Webshop_Frontend.Shared
@inject HttpClient Http
@inject CartService CartService

<h3>Proizvodi</h3>

<div class="mb-3">
    <select @bind="selectedCategoryId" class="form-control">
        <option value="0">Sve kategorije</option>
        @foreach (var category in categories)
        {
            <option value="@category.Id">@category.Name</option>
        }
    </select>
</div>

@if (products == null || categories == null)
{
    <div class="alert alert-info">Učitavam proizvode...</div>
}
else if (!products.Any())
{
    <div class="alert alert-warning">Nema dostupnih proizvoda</div>
}
else
{
    <div class="row">
        @foreach (var product in FilteredProducts)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text flex-grow-1">@product.Description</p>
                        <div class="mt-auto">
                            <p class="text-success fw-bold mb-3">@product.Price.ToString("C")</p>
                            <button @onclick="() => AddToCart(product)"
                                    class="btn btn-primary w-100">
                                <i class="bi bi-cart-plus"></i> Dodaj u košaricu
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private Product[] products = Array.Empty<Product>();
    private Category[] categories = Array.Empty<Category>();
    private int selectedCategoryId = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await Http.GetFromJsonAsync<Product[]>("https://localhost:7213/api/products");
            categories = await Http.GetFromJsonAsync<Category[]>("https://localhost:7213/api/categories");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private Product[] FilteredProducts =>
        selectedCategoryId == 0
            ? products
            : products.Where(p => p.CategoryId == selectedCategoryId).ToArray();

    private void AddToCart(Product product)
    {
        CartService.AddToCart(product);
    }
}
