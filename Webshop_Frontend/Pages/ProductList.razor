@page "/products"
@using Webshop_Frontend.Shared
@inject HttpClient Http
@inject CartService CartService

<h3>Proizvodi</h3>

<div class="container mt-4">
    <!-- Dropdown za kategorije -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="category-filter">
                <select @bind="selectedCategoryId" class="form-select form-select-sm">
                    <option value="0">Sve kategorije</option>
                    @if (categories != null && categories.Any())
                    {
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    }
                    else
                    {
                        <option disabled>Nema dostupnih kategorija</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <!-- Prikaz proizvoda -->
    @if (products == null || products.Length == 0)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Učitavam...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var product in FilteredProducts)
            {
                <div class="col-md-4 mb-4">
                    <div class="card h-100 shadow-sm">
                        <img src="@product.ImageUrl" class="card-img-top product-image" alt="@product.Name">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text text-muted">@product.Description</p>
                            <div class="mt-auto">
                                <p class="text-success fw-bold mb-3">@product.Price.ToString("C")</p>
                                <button @onclick="() => CartService.AddToCart(product)"
                                        class="btn btn-primary btn-sm w-100">
                                    <i class="bi bi-cart-plus"></i> Dodaj u košaricu
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private Product[] products = Array.Empty<Product>();
    private Category[] categories = Array.Empty<Category>();
    private int selectedCategoryId = 0; // Početno 0 - Sve kategorije

    // Metoda za inicijalno učitavanje podataka
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            // Dohvaćanje proizvoda i kategorija sa API-a
            products = await Http.GetFromJsonAsync<Product[]>("api/products");
            categories = await Http.GetFromJsonAsync<Category[]>("api/Category");

            // Dijagnostika: provjera dohvata
            if (categories == null || !categories.Any())
            {
                Console.WriteLine("Nema dostupnih kategorija.");
            }

            if (products == null || !products.Any())
            {
                Console.WriteLine("Nema dostupnih proizvoda.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Greška pri učitavanju podataka: {ex.Message}");
        }
    }

    // Filtrira proizvode na temelju odabrane kategorije
    private Product[] FilteredProducts =>
        selectedCategoryId == 0
            ? products
            : products.Where(p => p.CategoryId == selectedCategoryId).ToArray();
}