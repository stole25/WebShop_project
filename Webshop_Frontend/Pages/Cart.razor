@page "/cart"
@inject CartService CartService
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="cart-container">
    <!-- Sticky poruka za prijavu -->
    @if (!isLoggedIn)
    {
        <div class="login-warning text-center" @onclick="NavigateToLogin">
            Prijavite se kako biste nastavili kupovinu
        </div>
    }

    <h3 class="text-center mb-4">Košarica (@CartService.Items.Sum(i => i.Quantity))</h3>

    @if (CartService.Items.Count == 0)
    {
        <div class="text-center">
            <p class="text-center">Vaša košarica je prazna.</p>
            <button class="btn btn-success btn-lg mt-3" @onclick="NavigateToProducts">Dodaj proizvode</button>
        </div>
    }
    else
    {
        <!-- Središnji sadržaj: Kola proizvoda -->
        <div class="cart-items">
            @foreach (var item in CartService.Items)
            {
                <div class="card cart-item mb-3">
                    <div class="card-body d-flex align-items-center">
                        <!-- Slika proizvoda -->
                        <img src="@item.Product.ImageUrl" alt="@item.Product.Name"
                             class="img-thumbnail me-4 cart-item-image" />

                        <!-- Detalji o proizvodu -->
                        <div class="flex-grow-1">
                            <h5 class="mb-1">@item.Product.Name</h5>
                            <p class="text-muted mb-1">Cijena: @(item.Product.Price.ToString("C2"))</p>

                            <!-- Upravljanje količinom -->
                            <div class="quantity-controls d-flex align-items-center">
                                <button @onclick="() => UpdateQuantity(item.Product.Id, item.Quantity - 1)"
                                        class="btn btn-light btn-sm px-2 py-1 me-2">−</button>
                                <span class="quantity-value">@item.Quantity</span>
                                <button @onclick="() => UpdateQuantity(item.Product.Id, item.Quantity + 1)"
                                        class="btn btn-light btn-sm px-2 py-1 ms-2">+</button>
                            </div>

                            <!-- Ukupno za proizvod -->
                            <p class="mt-2">Ukupno: @String.Format("{0:C2}", item.Quantity * item.Product.Price)</p>
                        </div>

                        <!-- Gumb za uklanjanje -->
                        <button @onclick="() => CartService.RemoveFromCart(item.Product.Id)"
                                class="btn btn-danger">
                            Ukloni
                        </button>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Fiksni footer za ukupno i plaćanje -->
@if (CartService.Items.Count > 0)
{
    <div class="cart-footer">
        <div class="d-flex justify-content-between align-items-center w-100">
            <h5 class="mb-0 ms-3">Ukupno: @CartService.GetTotal().ToString("C2")</h5>
            @if (isLoggedIn)
            {
                <!-- Gumb za prijavljene korisnike -->
                <button class="btn btn-success btn-lg me-3" @onclick="NavigateToCheckout">Nastavi na plaćanje</button>
            }
            else
            {
                <!-- Grayed-out gumb bez funkcionalnosti -->
                <button class="btn btn-secondary btn-lg me-3 grayed-out">Nastavi na plaćanje</button>
            }
        </div>
    </div>
}

<style>
    /* Glavni stilovi kartice proizvoda */
    .cart-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
    }

    .login-warning {
        background-color: #f8d7da;
        color: #842029;
        padding: 10px 20px;
        border: 1px solid #f5c2c7;
        border-radius: 5px;
        position: sticky;
        top: -2.5rem; /* Maksimalno podignuto prema gore */
        z-index: 9999;
        cursor: pointer;
        font-size: 1rem;
        margin-top: -2.5rem; /* Uklanjamo još razmaka ako ga ima */
    }

    .login-warning:hover {
        background-color: #f5c2c7;
    }

    .cart-item {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .cart-item-image {
        max-width: 100px;
        max-height: 100px;
        object-fit: cover;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 1.2rem;
    }

    .quantity-value {
        font-weight: bold;
        font-size: 1rem;
    }

    /* Stilovi za footer na dnu */
    .cart-footer {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background: #f8f9fa;
        border-top: 1px solid #ddd;
        padding: 10px 0;
        box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);
        z-index: 1000;
    }

    .cart-footer h5 {
        font-weight: bold;
    }

    .cart-footer button {
        font-size: 1rem;
        padding: 10px 20px;
    }

    /* Simuliraj grayed-out stil bez funkcionalnosti */
    .btn-secondary.grayed-out {
        background-color: #d6d6d6;
        color: #6c757d;
        border: 1px solid #ccc;
        pointer-events: none; /* Onemogućuje interakcije */
        cursor: not-allowed;
    }

    /* Dugmad (zelena boja) */
    .btn-success {
        background-color: #198754;
        border-color: #198754;
        color: #fff;
    }

    .btn-success:hover {
        background-color: #157347;
        border-color: #146c43;
    }
</style>

@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        // Provjeri je li korisnik prijavljen
        isLoggedIn = await AuthService.IsLoggedIn();
    }

    private async Task UpdateQuantity(int productId, int newQuantity)
    {
        if (newQuantity <= 0)
        {
            await CartService.RemoveFromCart(productId);
        }
        else
        {
            await CartService.UpdateQuantity(productId, newQuantity);
        }

        StateHasChanged();
    }

    private void NavigateToCheckout()
    {
        Navigation.NavigateTo("/cart/checkout");
    }

    private void NavigateToProducts()
    {
        // Preusmjeri na stranicu proizvoda
        Navigation.NavigateTo("/products");
    }

    private void NavigateToLogin()
    {
        // Preusmjeri na login stranicu
        Navigation.NavigateTo("/login");
    }
}