@page "/cart"
@inject CartService CartService
@inject AuthService AuthService
@inject NavigationManager Navigation

<h3>Košarica (@CartService.Items.Sum(i => i.Quantity))</h3>

@if (CartService.Items.Count == 0)
{
    <p>Košarica je prazna</p>
}
else
{
    <div class="row">
        <!-- Kolona za artikle -->
        <div class="col-md-8">
            <div class="cart-items">
                @foreach (var item in CartService.Items)
                {
                    <div class="card mb-3">
                        <div class="card-body d-flex align-items-center">
                            <!-- Slika proizvoda -->
                            <img src="@item.Product.ImageUrl" alt="@item.Product.Name"
                                 class="img-thumbnail me-3"
                                 style="max-width: 100px; max-height: 100px;" />

                            <!-- Detalji o proizvodu -->
                            <div class="flex-grow-1">
                                <h5>@item.Product.Name</h5>
                                <p>Cijena po komadu: @(item.Product.Price.ToString("C2"))</p>

                                <!-- Upravljanje količinom -->
                                <div class="quantity-controls d-flex align-items-center">
                                    <button @onclick="() => UpdateQuantity(item.Product.Id, item.Quantity - 1)"
                                            class="btn btn-light btn-sm px-2 py-1">
                                        −
                                    </button>
                                    <span class="mx-3" style="font-size: 1.2rem; font-weight: bold;">@item.Quantity</span>
                                    <button @onclick="() => UpdateQuantity(item.Product.Id, item.Quantity + 1)"
                                            class="btn btn-light btn-sm px-2 py-1">
                                        +
                                    </button>
                                </div>

                                <!-- Total za proizvod -->
                                <p>Ukupno za ovaj artikl: @String.Format("{0:C2}", item.Quantity * item.Product.Price)</p>
                            </div>

                            <!-- Gumb za uklanjanje -->
                            <button @onclick="() => CartService.RemoveFromCart(item.Product.Id)"
                                    class="btn btn-danger align-self-start">
                                Ukloni
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Kolona za total i plaćanje -->
        <div class="col-md-4">
            <div class="p-3 border rounded">
                <h4 class="text-end">Ukupno: @CartService.GetTotal().ToString("C2")</h4>

                @if (isLoggedIn)
                {
                    <!-- Gumb za plaćanje kada je korisnik prijavljen -->
                    <button class="btn btn-primary btn-lg w-100 mt-3" @onclick="NavigateToCheckout">
                        Plaćanje
                    </button>
                }
                else
                {
                    <!-- Onemogućen gumb za plaćanje kad korisnik nije prijavljen -->
                    <button class="btn btn-secondary btn-lg w-100 mt-3" disabled>
                        Plaćanje
                    </button>
                    <p class="text-muted text-center mt-3">
                        <a href="/login" class="text-decoration-none">Prijavite se</a> kako biste nastavili na plaćanje.
                    </p>
                }
            </div>
        </div>
    </div>
}

@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync()
    {
        // Provjeri je li korisnik prijavljen
        isLoggedIn = await AuthService.IsLoggedIn();
    }

    private async Task UpdateQuantity(int productId, int newQuantity)
    {
        if (newQuantity <= 0)
        {
            await CartService.RemoveFromCart(productId);
        }
        else
        {
            await CartService.UpdateQuantity(productId, newQuantity);
        }

        StateHasChanged();
    }

    private void NavigateToCheckout()
    {
        Navigation.NavigateTo("/cart/checkout");
    }
}