@page "/register"
@using Webshop_Frontend.Models
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="card-title mb-4">Registracija</h3>

                    <EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <InputText class="form-control" @bind-Value="registerModel.Email" />
                            <ValidationMessage For="@(() => registerModel.Email)" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Lozinka</label>
                            <InputText type="password" class="form-control" @bind-Value="registerModel.Password" />
                            <ValidationMessage For="@(() => registerModel.Password)" />
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">@errorMessage</div>
                        }

                        <button type="submit" class="btn btn-primary w-100">Registriraj se</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserRegistrationDto registerModel = new();
    private string errorMessage;

    private async Task HandleRegister()
    {
        errorMessage = string.Empty;
        try
        {
            await AuthService.Register(registerModel.Email, registerModel.Password);
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}
