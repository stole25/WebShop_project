@page "/login"
@using Webshop_Frontend.Models
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="card-title mb-4">Prijava</h3>

                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="loginModel.Email" class="form-control" />
                            <ValidationMessage For="@(() => loginModel.Email)" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Lozinka</label>
                            <InputText type="password" @bind-Value="loginModel.Password" class="form-control" />
                            <ValidationMessage For="@(() => loginModel.Password)" class="text-danger" />
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">@errorMessage</div>
                        }

                        <button type="submit" class="btn btn-primary w-100">Prijavi se</button>

                        <div class="text-center mt-3">
                            <small>
                                Nemate raƒçun?
                                <a href="/register" class="text-primary">Registrirajte se ovdje</a>
                            </small>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserLoginDto loginModel = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = null;
        try
        {
            await AuthService.Login(loginModel.Email, loginModel.Password);
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
            StateHasChanged();
        }
    }
}
